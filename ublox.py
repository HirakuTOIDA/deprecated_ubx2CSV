# -*- coding: utf-8 -*-
import struct
import numpy as np
import pandas as pd
import copy
import re

ubx_sync_char = [0xB5, 0x62]

ubx_messages_6 = {
    0x0101: ["nav_posecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)",
              "pAcc (cm)"],
             [],
             []],
    0x0102: ["nav_posllh",28,
             "U4I4I4I4I4U4U4",
             0,"",
             [1,1e-7,1e-7,1,1,1,1],
             ["iTOW (ms)", "lon (deg)", "lat (deg)", "height (mm)",
              "hMSL (mm)", "hAcc (mm)", "vAcc (mm)"],
             [],
             []],
    0x0103: ["nav_status",16,
             "U4U1X1X1X1U4U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "gpsFix", "flags", "fixStat", "flags2", "ttff",
              "msss"],
             [],
             []],
    0x0104: ["nav_dop",18,
             "U4U2U2U2U2U2U2U2",
             0,"",
             [1,0.01,0.01,0.01,0.01,0.01,0.01,0.01],
             ["iTOW (ms)", "gDOP", "pDOP", "tDOP", "vDOP", "hDOP", "nDOP",
              "eDOP"],
             [],
             []],
    0x0106: ["nav_sol",52,
             "U4I4I2U1X1I4I4I4U4I4I4I4U4U2U1U1U4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1,0.01,1,1,1],
             ["iTOW (ms)", "fTOW (ns)", "week", "gpsFix", "flags",
              "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)", "pAcc (cm)",
              "ecefVX (cm/s)", "ecefVY (cm/s)", "ecefVZ (cm/s)", "sAcc (cm/s)",
              "pDOP", "reserved1", "numSV", "reserved2"],
             [],
             []],
    0x0111: ["nav_velecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefVX (cm/s)", "ecefVY (cm/s)", "ecefVZ (cm/s)",
              "sAcc (cm/s)"],
             [],
             []],
    0x0112: ["nav_velned",36,
             "U4I4I4I4U4U4I4U4U4",
             0,"",
             [1,1,1,1,1,1,1e-5,1,1e-5],
             ["iTOW (ms)", "velN (cm/s)", "velE (cm/s)", "velD (cm/s)",
              "speed (cm/s)", "gSpeed (cm/s)", "heading (deg)", "sAcc (cm/s)",
              "cAcc (deg)"],
             [],
             []],
    0x0120: ["nav_timegps",16,
             "U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1],
             ["iTOW (ms)", "fTOW (ns)", "week", "leapS (s)", "valid",
              "tAcc (ns)"],
             [],
             []],
    0x0121: ["nav_timeutc",20,
             "U4U4I4U2U1U1U1U1U1X1",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["iTOW (ms)", "tAcc (ns)", "nano (ns)", "year (y)",
              "month (month)", "day (d)", "hour (h)", "min (min)", "sec (s)",
              "valid"],
             [],
             []],
    0x0122: ["nav_clock",20,
             "U4I4I4U4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "clkB (ns)", "clkD (ns/s)", "tAcc (ns)",
              "fAcc (ps/s)"],
             [],
             []],
    # @todo svid, 可変長フォーマット対応
    0x0130: ["nav_svinfo",8,
             "U4U1X1U2",
             12,"U1U1X1X1U1I1I2I4",
             [1,1,1,1],
             ["iTOW (ms)", "numCh", "globalFlags", "reserved2"],
             [1,1,1,1,1,1,1,1],
             ["chn", "svid", "flags", "quality", "cno (dbHz)", "elev (deg)",
              "azim (deg)", "prRes (cm)"]],
    # @todo svid
    0x0131: ["nav_dgps",16,
             "U4I4I2I2U1U1U2",
             12,"U1U1U2R4R4",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "age (ms)", "baseId", "baseHealth", "numCh",
              "status", "reserved1"],
             [1,1,1,1,1],
             ["svid", "flags", "ageC (ms)", "prc (m)", "prrc (m/s)"]],
    # @todo svid
    0x0132: ["nav_sbas",12,
             "U4U1U1I1X1U1"+"U1"*3,
             12,"U1U1U1U1U1U1I2U2I2",
             [1,1,1,1,1,1]+[1]*3,
             ["iTOW (ms)", "geo", "mode", "sys", "service",
              "cnt"]+["reserved0"]*3,
             [1,1,1,1,1,1,1,1,1],
             ["svid", "flags", "udre", "svSys", "svService", "reserved1",
              "prc (cm)", "reserved2", "ic (cm)"]],
    0x0140: ["nav_ekfstatus",36,
             "I4I4U4I2I1X1I4I4I4I2I2I2X1U1",
             0,"",
             [1,1,1e-2,2**-8,1,1,1e-5,1e-5,1e-5,1e-4,1e-4,1e-4,1,1],
             ["pulses", "period (ms)", "gyroMean", "temperature (degC)",
              "direction", "calibStatus", "pulseScale", "gyroBias",
              "gyroScale", "accPulseScale", "accGyroBias", "accGyroScale",
              "measUsed", "reserved2"],
             [],
             []],
    0x0160: ["nav_aopstatus",20,
             "U4U1U1U1U1U4U4U4",
             0,"",
             [1,1,1,1,1,1,1,1],
             ["iTOW (ms)", "config", "status", "reserved0", "reserved1",
              "avail", "reserved2", "reserved3"],
             [],
             []],
    # @todo svid
    0x0210: ["rxm_raw",8,
             "I4I2U1U1",
             24,"R8R8R4U1I1I1U1",
             [1,1,1,1],
             ["iTOW (ms)", "week (weeks)", "numSV", "reserved1"],
             [1,1,1,1,1,1,1],
             ["cpMes (cycles)", "prMes (m)", "doMes (Hz)", "sv", "mesQI",
              "cno (dbHz)", "lli"]],
    0x0211: ["rxm_sfrb",42,
             "U1U1"+"X4"*10,
             0,"",
             [1,1]+[1]*10,
             ["chn", "svid"]+["dwrd"]*10,
             [],
             []],
    # @todo svid
    0x0220: ["rxm_svsi",8,
             "I4I2U1U1",
             6,"U1X1I2I1X1",
             [1,1,1,1],
             ["iTOW (ms)", "week (weeks)", "numVis", "numSV"],
             [1,1,1,1,1],
             ["svid", "svFlag", "azim", "elev", "age"]],
    # @todo svid
    0x0230: ["rxm_alm",8,
             "U4U4",
             32,"U4"*8,
             [1,1],
             ["svid", "week"],
             [1]*8,
             ["dwrd"]*8],
    # @todo svid
    0x0231: ["rxm_eph",8,
             "U4U4",
             96,"U4"*8+"U4"*8+"U4"*8,
             [1,1],
             ["svid", "how"],
             [1]*8+[1]*8+[1]*8,
             ["sf1d"]*8+["sf2d"]*8+["sf3d"]*8],
    # @todo 長さチェック
    0x0A02: ["mon_io",0,
             "",
             20,"U4U4U2U2U2U2U1U1U2",
             [],
             [],
             [1,1,1,1,1,1,1,1,1],
             ["rxBytes (bytes)", "txBytes (bytes)", "parityErrs",
              "framingErrs", "overrunErrs", "breakCond", "rxBusy",
              "txBusy", "reserved1"]],
    0x0A06: ["mon_msgpp",120,
             "U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U4"*6,
             0,"",
             [1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*6,
             ["msg1 (msgs)"]*8+["msg2 (msgs)"]*8+["msg3 (msgs)"]*8 \
             +["msg4 (msgs)"]*8+["msg5 (msgs)"]*8+["msg6 (msgs)"]*8 \
             +["skipped (bytes)"]*6,
             [],
             []],
    0x0A07: ["mon_rxbuf",24,
             "U2"*6+"U1"*6+"U1"*6,
             0,"",
             [1]*6+[1]*6+[1]*6,
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6,
             [],
             []],
    0x0A08: ["mon_txbuf",28,
             "U2"*6+"U1"*6+"U1"*6+"U1U1X1U1",
             0,"",
             [1]*6+[1]*6+[1]*6+[1,1,1,1],
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6 \
             +["tUsage (%)", "tPeakusage (%)", "errors", "reserved1"],
             [],
             []],
    0x0A09: ["mon_hw",68,
             "X4X4X4X4U2U2U1U1X1U1X4"+"U1"*25+"U1U2X4X4X4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1]+[1]*25+[1,1,1,1,1],
             ["pinSel", "pinBank", "pinDir", "pinVal", "noisePerMS", "agcCnt",
              "aStatus", "aPower", "flags", "reserved1", "usedMask"]+ \
             ["VP"]*25+["jamInd", "reserved3", "pinIrq", "pullH", "pullL"],
             [],
             []],
    0x0A0B: ["mon_hw2",28,
             "I1U1I1U1U1"+"U1"*3+"X4"+"U4"*2+"X4U4",
             0,"",
             [1,1,1,1,1]+[1]*3+[1]+[1]*2+[1,1],
             ["ofsI", "magI", "ofsQ", "magQ", "cfgSource"]+["reserved0"]*3 \
             +["lowLevCfg"]+["reserved1"]*2+["postStatus", "reserved2"],
             [],
             []],
    0x0B01: ["aid_ini",48,
             "I4I4I4U4X2U2U4I4U4U4I4U4X4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1],
             ["ecefXOrLat (cm_or_deg*1e-7)", "ecefYOrLon (cm_or_deg*1e-7)",
              "ecefZOrAlt (cm)", "posAcc (cm)", "tmCfg", "wn", "tow (ms)",
              "towNs (ns)", "tAccMs (ms)", "tAccNs (ns)",
              "clkDOrFreq (ns/s_or_Hz*1e-2)", "clkDAccOrFreqAcc (ns/s_or_ppb)",
              "flags"],
             [],
             []],
    0x0B50: ["aid_alp",24,
             "U4U4I4U2U2U4U1U1U2",
             0,"",
             [1,1,1,1,1,1,1,1,1],
             ["predTow (s)", "predDur (s)", "age (s)", "predWno", "almWno",
              "reserved1", "svs", "reserved2", "reserved3"],
             [],
             []],
    0x0D01: ["tim_tp",16,
             "U4U4I4U2X1U1",
             0,"",
             [1,2**-32,1,1,1,1],
             ["towMS (ms)", "towSubMS (ms)", "qErr (ps)", "week (weeks)",
              "flags", "reserved1"],
             [],
             []],
    0x0D03: ["tim_tm2",28,
             "U1X1U2U2U2U4U4U4U4U4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["ch (time)", "flags", "count", "wnR", "wnF", "towMsR (ms)",
              "towSubMsR (ns)", "towMsF (ms)", "towSubMsF (ns)",
              "accEst (ns)"],
             [],
             []],
    0x0D04: ["tim_svin",28,
             "U4I4I4I4U4U4U1U1U2",
             0,"",
             [1,1,1,1,1,1,1,1,1],
             ["dur (s)", "meanX (cm)", "meanY (cm)", "meanZ (cm)",
              "meanV (mm^2)", "obs", "valid", "active", "reserved1"],
             [],
             []],
    0x0D06: ["tim_vrfy",20,
             "I4I4I4I4U2X1U1",
             0,"",
             [1,1,1,1,1,1,1],
             ["itow (ms)", "frac (ns)", "deltaMs (ms)", "deltaNs (ns)",
              "wno (week)", "flags", "reserved1"],
             [],
             []]
}

ubx_messages_7 = {
    0x0101: ["nav_posecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)",
              "pAcc (cm)"],
             [],
             []],
    0x0102: ["nav_posllh",28,
             "U4I4I4I4I4U4U4",
             0,"",
             [1,1e-7,1e-7,1,1,1,1],
             ["iTOW (ms)", "lon (deg)", "lat (deg)", "height (mm)",
              "hMSL (mm)", "hAcc (mm)", "vAcc (mm)"],
             [],
             []],
    0x0103: ["nav_status",16,
             "U4U1X1X1X1U4U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "gpsFix", "flags", "fixStat", "flags2", "ttff",
              "msss"],
             [],
             []],
    0x0104: ["nav_dop",18,
             "U4U2U2U2U2U2U2U2",
             0,"",
             [1,0.01,0.01,0.01,0.01,0.01,0.01,0.01],
             ["iTOW (ms)", "gDOP", "pDOP", "tDOP", "vDOP", "hDOP", "nDOP",
              "eDOP"],
             [],
             []],
    0x0106: ["nav_sol",52,
             "U4I4I2U1X1I4I4I4U4I4I4I4U4U2U1U1U4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1,0.01,1,1,1],
             ["iTOW (ms)", "fTOW (ns)", "week (weeks)", "gpsFix", "flags",
              "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)", "pAcc (cm)",
              "ecefVX (cm/s)", "ecefVY (cm/s)", "ecefVZ (cm/s)", "sAcc (cm/s)",
              "pDOP", "reserved1", "numSV", "reserved2"],
             [],
             []],
    # new in ublox 7
    0x0107: ["nav_pvt",84,
             "U4U2U1U1U1U1U1X1U4I4U1X1U1U1I4I4I4I4U4U4I4I4I4I4I4U4U4U2X2U4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1e-7,1e-7,1,1,1,1,1,1,1,1,1e-5,1,
              1e-5,0.01,1,1],
             ["iTOW (ms)", "year (y)", "month (month)", "day (d)", "hour (h)",
              "min (min)", "sec (s)", "valid", "tAcc (ns)", "nano (ns)",
              "fixType", "flags", "reserved1", "numSV", "lon (deg)",
              "lat (deg)", "height (mm)", "hMSL (mm)", "hAcc (mm)",
              "vAcc (mm)", "velN (mm/s)", "velE (mm/s)", "velD (mm/s)",
              "gSpeed (mm/s)", "heading (deg)", "sAcc (mm/s)",
              "headingAcc (deg)", "pDOP", "reserved2", "reserved3"],
             [],
             []],
    0x0111: ["nav_velecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefVX (cm/s)", "ecefVY (cm/s)", "ecefVZ (cm/s)",
              "sAcc (cm/s)"],
             [],
             []],
    0x0112: ["nav_velned",36,
             "U4I4I4I4U4U4I4U4U4",
             0,"",
             [1,1,1,1,1,1,1e-5,1,1e-5],
             ["iTOW (ms)", "velN (cm/s)", "velE (cm/s)", "velD (cm/s)",
              "speed (cm/s)", "gSpeed (cm/s)", "heading (deg)", "sAcc (cm/s)",
              "cAcc (deg)"],
             [],
             []],
    0x0120: ["nav_timegps",16,
             "U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1],
             ["iTOW (ms)", "fTOW (ns)", "week", "leapS (s)", "valid",
              "tAcc (ns)"],
             [],
             []],
    0x0121: ["nav_timeutc",20,
             "U4U4I4U2U1U1U1U1U1X1",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["iTOW (ms)", "tAcc (ns)", "nano (ns)", "year (y)",
              "month (month)", "day (d)", "hour (h)", "min (min)", "sec (s)",
              "valid"],
             [],
             []],
    0x0122: ["nav_clock",20,
             "U4I4I4U4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "clkB (ns)", "clkD (ns/s)", "tAcc (ns)",
              "fAcc (ps/s)"],
             [],
             []],
    # @todo svid, 可変長フォーマット対応
    0x0130: ["nav_svinfo",8,
             "U4U1X1U2",
             12,"U1U1X1X1U1I1I2I4",
             [1,1,1,1],
             ["iTOW (ms)", "numCh", "globalFlags", "reserved2"],
             [1,1,1,1,1,1,1,1],
             ["chn", "svid", "flags", "quality", "cno (dbHz)", "elev (deg)",
              "azim (deg)", "prRes (cm)"]],
    # @todo svid
    0x0131: ["nav_dgps",16,
             "U4I4I2I2U1U1U2",
             12,"U1X1U2R4R4",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "age (ms)", "baseId", "baseHealth", "numCh",
              "status", "reserved1"],
             [1,1,1,1,1],
             ["svid", "flags", "ageC (ms)", "prc (m)", "prrc (m/s)"]],
    # @todo svid
    0x0132: ["nav_sbas",12,
             "U4U1U1I1X1U1"+"U1"*3,
             12,"U1U1U1U1U1U1I2U2I2",
             [1,1,1,1,1,1]+[1]*3,
             ["iTOW (ms)", "geo", "mode", "sys", "service",
              "cnt"]+["reserved0"]*3,
             [1,1,1,1,1,1,1,1,1],
             ["svid", "flags", "udre", "svSys", "svService", "reserved1",
              "prc (cm)", "reserved2", "ic (cm)"]],
    0x0160: ["nav_aopstatus",20,
             "U4U1U1U1U1U4U4U4",
             0,"",
             [1,1,1,1,1,1,1,1],
             ["iTOW (ms)", "aopCfg", "status", "reserved0", "reserved1",
              "availGPS", "reserved2", "reserved3"],
             [],
             []],
    # @todo svid
    0x0210: ["rxm_raw",8,
             "I4I2U1U1",
             24,"R8R8R4U1I1I1U1",
             [1,1,1,1],
             ["rcvTow (ms)", "week (weeks)", "numSV", "reserved1"],
             [1,1,1,1,1,1,1],
             ["cpMes (cycles)", "prMes (m)", "doMes (Hz)", "sv", "mesQI",
              "cno (dbHz)", "lli"]],
    0x0211: ["rxm_sfrb",42,
             "U1U1"+"X4"*10,
             0,"",
             [1,1]+[1]*10,
             ["chn", "svid"]+["dwrd"]*10,
             [],
             []],
    # @todo svid
    0x0220: ["rxm_svsi",8,
             "U4I2U1U1",
             6,"U1X1I2I1X1",
             [1,1,1,1],
             ["iTOW (ms)", "week (weeks)", "numVis", "numSV"],
             [1,1,1,1,1],
             ["svid", "svFlag", "azim", "elev", "age"]],
    0x0230: ["rxm_alm",8,
             "U4U4",
             32,"U4"*8,
             [1,1],
             ["svid", "week"],
             [1]*8,
             ["dwrd"]*8],
    0x0231: ["rxm_eph",8,
             "U4U4",
             96,"U4"*8+"U4"*8+"U4"*8,
             [1,1],
             ["svid", "how"],
             [1]*8+[1]*8+[1]*8,
             ["sf1d"]*8+["sf2d"]*8+["sf3d"]*8],
    0x0A02: ["mon_io",0,
             "",
             20,"U4U4U2U2U2U2U1U1U2",
             [],
             [],
             [1,1,1,1,1,1,1,1,1],
             ["rxBytes (bytes)", "txBytes (bytes)", "parityErrs",
              "framingErrs", "overrunErrs", "breakCond", "rxBusy", "txBusy",
              "reserved1"]],
    0x0A06: ["mon_msgpp",120,
             "U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U4"*6,
             0,"",
             [1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*6,
             ["msg1 (msgs)"]*8+["msg2 (msgs)"]*8+["msg3 (msgs)"]*8+ \
             ["msg4 (msgs)"]*8+["msg5 (msgs)"]*8+["msg6 (msgs)"]*8+ \
             ["skipped (bytes)"]*6,
             [],
             []],
    0x0A07: ["mon_rxbuf",24,
             "U2"*6+"U1"*6+"U1"*6,
             0,"",
             [1]*6+[1]*6+[1]*6,
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6,
             [],
             []],
    0x0A08: ["mon_txbuf",28,
             "U2"*6+"U1"*6+"U1"*6+"U1U1X1U1",
             0,"",
             [1]*6+[1]*6+[1]*6+[1,1,1,1],
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6+ \
             ["tUsage (%)", "tPeakusage (%)", "errors", "reserved1"],
             [],
             []],
    # different from ublox 6
    0x0A09: ["mon_hw",60,
             "X4X4X4X4U2U2U1U1X1U1X4"+"U1"*17+"U1U2X4X4X4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1]+[1]*17+[1,1,1,1,1],
             ["pinSel", "pinBank", "pinDir", "pinVal", "noisePerMS", "agcCnt",
              "aStatus", "aPower", "flags", "reserved1", "usedMask"]+ \
             ["VP"]*17+["jamInd", "reserved3", "pinIrq", "pullH", "pullL"],
             [],
             []],
    # different from ublox 6
    0x0A0B: ["mon_hw2",28,
             "I1U1I1U1U1"+"U1"*3+"U4"+"U4"*2+"U4U4",
             0,"",
             [1,1,1,1,1]+[1]*3+[1]+[1]*2+[1,1],
             ["ofsI", "magI", "ofsQ", "magQ", "cfgSource"]+["reserved0"]*3+ \
             ["lowLevCfg"]+["reserved1"]*2+["postStatus", "reserved2"],
             [],
             []],
    0x0B50: ["aid_alp",24,
             "U4U4I4U2U2U4U1U1U2",
             0,"",
             [1,1,1,1,1,1,1,1,1],
             ["predTow (s)", "predDur (s)", "age (s)", "predWno", "almWno",
              "reserved1", "svs", "reserved2", "reserved3"],
             [],
             []],
    0x0D01: ["tim_tp",16,
             "U4U4I4U2X1U1",
             0,"",
             [1,2**-32,1,1,1,1],
             ["towMS (ms)", "towSubMS (ms)", "qErr (ps)", "week (weeks)",
              "flags", "reserved1"],
             [],
             []],
    0x0D03: ["tim_tm2",28,
             "U1X1U2U2U2U4U4U4U4U4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["ch (time)", "flags", "count", "wnR", "wnF", "towMsR (ms)",
              "towSubMsR (ns)", "towMsF (ms)", "towSubMsF (ns)",
              "accEst (ns)"],
             [],
             []],
    0x0D06: ["tim_vrfy",20,
             "I4I4I4I4U2X1U1",
             0,"",
             [1,1,1,1,1,1,1],
             ["itow (ms)", "frac (ns)", "deltaMs (ms)", "deltaNs (ns)",
              "wno (week)", "flags", "reserved1"],
             [],
             []]
}

ubx_messages_8 = {
    0x0101: ["nav_posecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)",
              "pAcc (cm)"],
             [],
             []],
    0x0102: ["nav_posllh",28,
             "U4I4I4I4I4U4U4",
             0,"",
             [1,1e-7,1e-7,1,1,1,1],
             ["iTOW (ms)", "lon (deg)", "lat (deg)", "height (mm)",
              "hMSL (mm)", "hAcc (mm)", "vAcc (mm)"],
             [],
             []],
    0x0103: ["nav_status",16,
             "U4U1X1X1X1U4U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "gpsFix", "flags", "fixStat", "flags2", "ttff (ms)",
              "msss (ms)"],
             [],
             []],
    0x0104: ["nav_dop",18,
             "U4U2U2U2U2U2U2U2",
             0,"",
             [1,0.01,0.01,0.01,0.01,0.01,0.01,0.01],
             ["iTOW (ms)", "gDOP", "pDOP", "tDOP", "vDOP", "hDOP", "nDOP",
              "eDOP"],
             [],
             []],
    # new in ublox 8
    0x0105: ["nav_att",32,
             "U4U1"+"U1"*3+"I4I4I4U4U4U4",
             0,"",
             [1,1]+[1]*3+[1e-5,1e-5,1e-5,1e-5,1e-5,1e-5],
             ["iTOW (ms)", "version"]+["reserved1"]*3+ \
             ["roll (deg)", "pitch (deg)", "heading (deg)", "accRoll (deg)",
              "accPitch (deg)", "accHeading (deg)"],
             [],
             []],
    # different from ublox 7
    0x0106: ["nav_sol",52,
             "U4I4I2U1X1I4I4I4U4I4I4I4U4U2U1U1"+"U1"*4,
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1,0.01,1,1]+[1]*4,
             ["iTOW (ms)", "fTOW (ns)", "week (weeks)", "gpsFix", "flags",
              "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)", "pAcc (cm)",
              "ecefVX (cm/s)", "ecefVY (cm/s)", "ecefVZ (cm/s)", "sAcc (cm/s)",
              "pDOP", "reserved1", "numSV"]+["reserved2"]*4,
             [],
             []],
    # different from ublox 7
    0x0107: ["nav_pvt",92,
             "U4U2U1U1U1U1U1X1U4I4U1X1X1U1I4I4I4I4U4U4I4I4I4I4I4U4U4U2"+ \
             "U1"*6+"I4I2U2",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1e-7,1e-7,1,1,1,1,1,1,1,1,1e-5,1,
              1e-5,0.01,1]+[1]*6+[1e-5,1e-2,1e-2],
             ["iTOW (ms)", "year (y)", "month (month)", "day (d)", "hour (h)",
              "min (min)", "sec (s)", "valid", "tAcc (ns)", "nano (ns)",
              "fixType", "flags", "flags2", "numSV", "lon (deg)", "lat (deg)",
              "height (mm)", "hMSL (mm)", "hAcc (mm)", "vAcc (mm)",
              "velN (mm/s)", "velE (mm/s)", "velD (mm/s)", "gSpeed (mm/s)",
              "headMot (deg)", "sAcc (mm/s)", "headAcc (deg)", "pDOP"]+ \
             ["reserved1"]*6+["headVeh (deg)", "magDec (deg)", "magAcc (deg)"],
             [],
             []],
    # new in ublox 8
    0x0109: ["nav_odo",20,
             "U1"+"U1"*3+"U4U4U4U4",
             0,"",
             [1]+[1]*3+[1,1,1,1],
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "distance (m)","totalDistance (m)",
              "distanceStd (m)"],
             [],
             []],
    0x0111: ["nav_velecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefVX (cm/s)", "ecefVY (cm/s)", "ecefVZ (cm/s)",
              "sAcc (cm/s)"],
             [],
             []],
    0x0112: ["nav_velned",36,
             "U4I4I4I4U4U4I4U4U4",
             0,"",
             [1,1,1,1,1,1,1e-5,1,1e-5],
             ["iTOW (ms)", "velN (cm/s)", "velE (cm/s)", "velD (cm/s)",
              "speed (cm/s)", "gSpeed (cm/s)", "heading (deg)", "sAcc (cm/s)",
              "cAcc (deg)"],
             [],
             []],
    # new in ublox 8
    0x0113: ["nav_hpposecef",28,
             "U1"+"U1"*3+"U4I4I4I4I1I1I1U1U4",
             0,"",
             [1]+[1]*3+[1,1,1,1,0.1,0.1,0.1,1,0.1],
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)",
              "ecefXHp (mm)", "ecefYHp (mm)", "ecefZHp (mm)", "reserved2",
              "pAcc (mm)"],
             [],
             []],
    # new in ublox 8
    0x0114: ["nav_hpposllh",36,
             "U1"+"U1"*3+"U4I4I4I4I4I1I1I1I1U4U4",
             0,"",
             [1],[1]*3+[1,1e-7,1e-7,1,1,1e-9,1e-9,0.1,0.1,0.1,0.1],
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "log (deg)", "lat (deg)", "height (mm)",
              "hMSL (mm)", "lonHp (deg)", "latHp (deg)", "heightHp (mm)",
              "heightHp (mm)", "hAcc (mm)", "vAcc (mm)"],
             [],
             []],
    0x0120: ["nav_timegps",16,
             "U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1],
             ["iTOW (ms)", "fTOW (ns)", "week", "leapS (s)", "valid",
              "tAcc (ns)"],
             [],
             []],
    0x0121: ["nav_timeutc",20,
             "U4U4I4U2U1U1U1U1U1X1",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["iTOW (ms)", "tAcc (ns)", "nano (ns)", "year (y)",
              "month (month)", "day (d)", "hour (h)", "min (min)", "sec (s)",
              "valid"],
             [],
             []],
    0x0122: ["nav_clock",20,
             "U4I4I4U4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "clkB (ns)", "clkD (ns/s)", "tAcc (ns)",
              "fAcc (ps/s)"],
             [],
             []],
    # new in ublox 8
    0x0123: ["nav_timeglo",20,
             "U4U4I4U2U1X1U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "TOD (s)", "fTOD (ns)", "Nt (days)", "N4", "valid",
              "tAcc (ns)"],
             [],
             []],
    # new in ublox 8
    0x0124: ["nav_timebds",20,
             "U4U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "SOW (s)", "fSOW (ns)", "week", "leapS (s)",
              "valid", "tAcc (ns)"],
             [],
             []],
    # new in ublox 8
    0x0125: ["nav_timegal",20,
             "U4U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "galTow (s)", "fGalTow (ns)", "galWno", "leapS (s)",
              "valid", "tAcc (ns)"],
             [],
             []],
    # new in ublox 8
    0x0126: ["nav_timels",24,
             "U4U1"+"U1"*3+"U1I1U1I1I4U2U2"+"U1"*3+"X1",
             0,"",
             [1,1]+[1]*3+[1,1,1,1,1,1,1]+[1]*3+[1],
             ["iTOW (ms)", "version"]+["reserved1"]*3+ \
             ["srcOfCurrLs", "currLs (s)", "srcOfLsChange", "lsChange (s)",
              "timeToLsEvent (s)", "dateOfLsGpsWn", "dateOfLsGpsDn"]+ \
             ["reserved2"]*3+["valid"],
             [],
             []],
    # @todo svid
    0x0130: ["nav_svinfo",8,
             "U4U1X1"+"U1"*2,
             12,"U1U1X1X1U1I1I2I4",
             [1,1,1]+[1]*2,
             ["iTOW (ms)", "numCh", "globalFlags"]+["reserved1"]*2,
             [1,1,1,1,1,1,1,1],
             ["chn", "svid", "flags", "quality", "cno (dbHz)", "elev (deg)",
              "azim (deg)", "prRes (cm)"]],
    # @todo svid
    0x0131: ["nav_dgps",16
             ,"U4I4I2I2U1U1"+"U1"*2,
             12,"U1X1U2R4R4",
             [1,1,1,1,1,1]+[1]*2,
             ["iTOW (ms)", "age (ms)", "baseId", "baseHealth", "numCh",
              "status"]+["reserved1"]*2,
             [1,1,1,1,1],
             ["svid", "flags", "ageC (ms)", "prc (m)", "prrc (m/s)"]],
    # @todo svid
    0x0132: ["nav_sbas",12,
             "U4U1U1I1X1U1"+"U1"*3,
             12,"U1U1U1U1U1U1I2"+"U1"*2+"I2",
             [1,1,1,1,1,1]+[1]*3,
             ["iTOW (ms)", "geo", "mode", "sys", "service",
              "cnt"]+["reserved1"]*3,
             [1,1,1,1,1,1,1]+[1]*2+[1],
             ["svid", "flags", "udre", "svSys", "svService", "reserved2",
              "prc (cm)"]+["reserved3"]*2+["ic (cm)"]],
    # new in ublox 8
    # @todo svid + gnssid
    0x0134: ["nav_orb",8,
             "U4U1U1"+"U1"*2,
             6,"U1U1X1X1X1X1",
             [1,1,1]+[1]*2,
             ["iTOW (ms)", "version", "numSv"]+["reserved1"]*2,
             [1,1,1,1,1,1],
             ["gnssId", "svId", "svFlag", "eph", "alm", "otherOrb"]],
    # new in ublox 8
    # @todo svid + gnssid
    0x0135: ["nav_sat",8,
             "U4U1U1"+"U1"*2,
             12,"U1U1U1I1I2I2X4",
             [1,1,1]+[1]*2,
             ["iTOW (ms)", "version", "numSvs"]+["reserved1"]*2,
             [1,1,1,1,1,0.1,1],
             ["gnssId", "svId", "cno (dBHz)", "elev (deg)", "azim (deg)",
              "prRes (m)", "flags"]],
    # new in ublox 8
    # @todo numFences
    0x0139: ["nav_geofence",8,
             "U4U1U1U1U1",
             2,"U1"+"U1"*1,
             [1,1,1,1,1],
             ["iTOW (ms)", "version", "status", "numFences", "combState"],
             [1]+[1]*1,
             ["state"]+["reserved1"]*1],
    # new in ublox 8
    0x013B: ["nav_svin",40,
             "U1"+"U1"*3+"U4U4I4I4I4I1I1I1U1U4U4U1U1"+"U1"*2,
             0,"",
             [1]+[1]*3+[1,1,1,1,1,1,1,1,1,1,1,1,1]+[1]*2,
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "dur (s)", "meanX (cm)", "meanY (cm)", "meanZ (cm)",
              "meanXHP (0.1_mm)", "meanYHP (0.1_mm)", "meanZHP (0.1_mm)",
              "reserved2", "meanAcc (0.1_mm)", "obs", "valid", "active"]+ \
             ["reserved3"]*2,
             [],
             []],
    # new in ublox 8
    0x013C: ["nav_relposned",40,
             "U1U1U2U4I4I4I4I1I1I1U1U4U4U4X4",
             0,"",
             [1,1,1,1,1,1,1,0.1,0.1,0.1,1,0.1,0.1,0.1,1],
             ["version", "reserved1", "refStationId", "iTOW (ms)",
              "relPosN (cm)", "relPosE (cm)", "relPosD (cm)", "relPosHPN (mm)",
              "relPosHPE (mm)", "relPosHPD (mm)", "reserved2", "accN (mm)",
              "accE (mm)", "accD (mm)", "flags"],
             [],
             []],
    # new in ublox 8
    # @todo svid + gnssid
    0x0142: ["nav_slas",20,
             "U4U1"+"U1"*3+"I4I4U1U1X1U1",
             8,"U1U1U1"+"U1"*3+"I2",
             [1,1]+[1]*3+[1e-3,1e-3,1,1,1,1],
             ["iTOW (ms)", "version"]+["reserved1"]*3+ \
             ["gmsLon (deg)", "gmsLat (deg)", "gmsCode", "qzssSvId",
              "serviceFlags", "cnt"],
             [1,1,1]+[1]*3+[1],
             ["gnssId", "svId", "reserved2"]+["reserved3"]*3+["prc (cm)"]],
    # different from ublox 7
    0x0160: ["nav_aopstatus",16,
             "U4U1U1"+"U1"*10,
             0,"",
             [1,1,1]+[1]*10,
             ["iTOW (ms)", "aopCfg", "status"]+["reserved1"]*10,
             [],
             []],
    # new in ublox 8
    0x0161: ["nav_eoe",4,
             "U4",
             0,"",
             [1],
             ["iTOW (ms)"],
             [],
             []],
    0x0213: ["rxm_sfrbx",8,
             "U1U1U1U1U1U1U1U1",
             4,"U4",
             [1,1,1,1,1,1,1,1],
             ["gnssId", "svId", "reserved1", "freqId", "numWords", "reserved2",
              "version", "reserved3"],
             [1],
             ["dwrd"]],
    # new in ublox 8
    # @todo svid + gnssid
    0x0214: ["rxm_measx",44,
             "U1"+"U1"*3+"U4U4U4"+"U1"*4+"U4U2U2U2"+"U1"*2+"U2U1U1"+"U1"*8,
             24,"U1U1U1U1I4I4U2U2U4U1U1"+"U1"*2,
             [1]+[1]*3+[1,1,1]+[1]*4,[1,2e-4,2e-4,2e-4]+[1]*2+[2e-4,1,1]+[1]*8,
             ["version"]+["reserved1"]*3+ \
             ["gpsTOW (ms)", "gloTOW (ms)", "bdsTOW (ms)"]+["reserved2"]*4+ \
             ["qzssTOW (ms)", "gpsTOWacc (ms)", "gloTOWacc (ms)",
              "bdsTOWacc (ms)"]+["reserved3"]*2+ \
             ["qzssTOWacc", "numSV", "flags"]+["reserved4"]*8,
             [1,1,1,1,0.04,0.2,1,1,2e-21,1,1]+[1]*2,
             ["gnssId", "svId", "cNo", "mpathIndic", "dopplerMS (m/s)",
              "dopplerHz (Hz)", "wholeChips", "fracChips", "codePhase (ms)",
              "intCodePhase (ms)", "pseuRangeRMSErr"]+["reserved5"]*2],
    # new in ublox 8
    # @todo svid + gnssid
    # @todo nの扱い
    0x0215: ["rxm_rawx",16,
             "R8U2I1U1X1"+"U1"*3,
             32,"R8R8R4U1U1U1U1U2U1X1X1X1X1U1",
             [1,1,1,1,1]+[1]*3,
             ["rcvTow (ms)", "week (weeks)", "leapS (s)", "numMeas",
              "recStat"]+["reserved1"]*3,
             # [1,1,1,1,1,1,1,1,1,0.01*2**n,0.004,0.002*2**n,1,1],
             [1,1,1,1,1,1,1,1,1,1,0.004,1,1,1],
             #["prMes (m)", "cpMes (cycles)", "doMes (Hz)", "gnssId", "svId",
             # "reserved2", "freqId", "locktime (ms)", "cno (dBHz)",
             # "prStdev (m)", "cpStdev (cycles)", "doStdev (Hz)", "trkStat",
             # "reserved3"]],
             ["prMes (m)", "cpMes (cycles)", "doMes (Hz)", "gnssId", "svId",
              "reserved2", "freqId", "locktime (ms)", "cno (dBHz)",
              "prStdev (unscaled)", "cpStdev (cycles)", "doStdev (unscaled)", "trkStat",
              "reserved3"]],
    # @todo svid
    0x0220: ["rxm_svsi",8,
             "U4I2U1U1",
             6,"U1X1I2I1X1",
             [1,1,1,1],
             ["iTOW (ms)", "week (weeks)", "numVis", "numSV"],
             [1,1,1,1,1],
             ["svid", "svFlag", "azim", "elev", "age"]],
    # new in ublox 8
    0x0261: ["rxm_imes",4,
             "U1U1"+"U1"*2,
             44,"U1U1"+"U1"*3+"U1"+"U1"*2+"I4X4X4X4I4I4X4U4X4",
             [1,1]+[1]*2,
             ["numTx", "version"]+["reserved1"]*2,
             [1,1]+[1]*3+[1]+[1]*2+[2e-12,1,1,1,180*2e-24,360*2e-25,1,1,1],
             ["reserved2", "txId"]+["reserved3"]*3+["cno (dBHz)"]+ \
             ["reserved4"]*2+ \
             ["doppler (Hz)", "position1_1", "position1_2", "position2_1",
              "lat (deg)", "log (deg)", "shortIdFrame", "mediumIdLSB",
              "mediumId_2"]], # @todo numTx
    # @todo 20の倍数。計算可
    0x0A02: ["mon_io",0,
             "",
             20,"U4U4U2U2U2U2"+"U1"*4,
             [],
             [],
             [1,1,1,1,1,1]+[1]*4,
             ["rxBytes (bytes)", "txBytes (bytes)", "parityErrs",
              "framingErrs", "overrunErrs", "breakCond"]+["reserved1"]*4],
    # new in ublox 8
    # @todo string 長さ計算可
    0x0A04: ["mon_ver",40,
             "CH"*30+"CH"*10,
             30,"CH"*30,
             [1]*30+[1]*10,
             ["swVersion"]*30+["hwVersion"]*10,
             [1]*30,
             ["extension"]*30],
    0x0A06: ["mon_msgpp",120,
             "U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U4"*6,
             0,"",
             [1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*6,
             ["msg1 (msgs)"]*8+["msg2 (msgs)"]*8+["msg3 (msgs)"]*8+ \
             ["msg4 (msgs)"]*8+["msg5 (msgs)"]*8+["msg6 (msgs)"]*8+ \
             ["skipped (bytes)"]*6,
             [],
             []],
    0x0A07: ["mon_rxbuf",24,
             "U2"*6+"U1"*6+"U1"*6,
             0,"",
             [1]*6+[1]*6+[1]*6,
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6,
             [],
             []],
    0x0A08: ["mon_txbuf",28,
             "U2"*6+"U1"*6+"U1"*6+"U1U1X1U1",
             0,"",
             [1]*6+[1]*6+[1]*6+[1,1,1,1],
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6+ \
             ["tUsage (%)", "tPeakusage (%)", "errors", "reserved1"],
             [],
             []],
    # different from ublox 7
    0x0A09: ["mon_hw",60,
             "X4X4X4X4U2U2U1U1X1U1X4"+"U1"*17+"U1"+"U1"*2+"X4X4X4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1]+[1]*17+[1]+[1]*2+[1,1,1],
             ["pinSel", "pinBank", "pinDir", "pinVal", "noisePerMS", "agcCnt",
              "aStatus", "aPower", "flags", "reserved1", "usedMask"]+ \
             ["VP"]*17+["jamInd"]+["reserved2"]*2+["pinIrq", "pullH", "pullL"],
             [],
             []],
    # different from ublox 7
    0x0A0B: ["mon_hw2",28,
             "I1U1I1U1U1"+"U1"*3+"U4"+"U1"*8+"U4"+"U1"*4,
             0,"",
             [1,1,1,1,1]+[1]*3+[1]+[1]*8+[1]+[1]*4,
             ["ofsI", "magI", "ofsQ", "magQ", "cfgSource"]+["reserved1"]*3+ \
             ["lowLevCfg"]+["reserved2"]*8+["postStatus"]+["reserved3"]*4,
             [],
             []],
    # new in ublox 8
    # @todo nEntries
    0x0A27: ["mon_patch",4,
             "U2U2",
             16,"X4U4U4U4",
             [1,1],
             ["version", "nEntries"],
             [1,1,1,1],
             ["patchInfo", "comparatorNumber", "patchAddress", "patchData"]],
    # new in ublox 8
    0x0A2E: ["mon_smgr",16,
             "U1"+"U1"*3+"U4X2X2U1X1X1X1",
             0,"",
             [1]+[1]*3+[1,1,1,1,1,1,1],
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "intOsc", "extOsc", "discSrc", "gnss", "extInt0",
              "extInt1"],
             [],
             []],
    # different from ublox 7
    0x0D01: ["tim_tp",16,
             "U4U4I4U2X1X1",
             0,"",
             [1,2**-32,1,1,1,1],
             ["towMS (ms)", "towSubMS (ms)", "qErr (ps)", "week (weeks)",
              "flags", "refInfo"],
             [],
             []],
    0x0D03: ["tim_tm2",28,
             "U1X1U2U2U2U4U4U4U4U4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["ch", "flags", "count", "wnR", "wnF", "towMsR (ms)",
              "towSubMsR (ns)", "towMsF (ms)", "towSubMsF (ns)",
              "accEst (ns)"],
             [],
             []],
    # new in ublox 8
    0x0D04: ["tim_svin",28,
             "U4I4I4I4U4U4U1U1"+"U1"*2,
             0,"",
             [1,1,1,1,1,1,1,1]+[1]*2,
             ["dur (s)", "meanX (cm)", "meanY (cm)", "meanZ (cm)",
              "meanV (mm^2)", "obs", "valid", "active"]+["reserved1"]*2,
             [],
             []],
    0x0D06: ["tim_vrfy",20,
             "I4I4I4I4U2X1U1",
             0,"",
             [1,1,1,1,1,1,1],
             ["itow (ms)", "frac (ns)", "deltaMs (ms)", "deltaNs (ns)",
              "wno (week)", "flags", "reserved1"],
             [],
             []],
    # new in ublox 8
    0x0D15: ["tim_vcocal",12,
             "U1U1U1"+"U1"*3+"U2I4",
             0,"",
             [1,1,1,1]+[1]*2+[1,1,1],
             ["type", "version", "oscId", "srcId"]+["reserved1"]*2+ \
             ["raw0", "raw1", "maxStepSize (raw value/s)"],
             [],
             []],
    # new in ublox 8
    0x0D16: ["tim_fchg",32,
             "U1"+"U1"*3+"U4I4U4U4I4U4U4",
             0,"",
             [1]+[1]*3+[1,2^-8,2^-8,1,2^-8,2^-8,1],
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "intDeltaFreq (ppb)", "intDeltaFreqUnc (ppb)",
              "intRaw", "extDeltaFreq (ppb)", "extDeltaFreqUnc (ppb)",
              "extRaw"],
             [],
             []],
    # new in ublox 8
    0x1015: ["esf_ins",36,
             "U4"+"U1"*4+"U4I4I4I4I4I4I4",
             0,"",
             [1]+[1]*4+[1,1e-3,1e-3,1e-3,1e-2,1e-2,1e-2],
             ["bitfield0"]+["reserved1"]*4+ \
             ["iTOW (ms)", "xAngRate (deg/s)", "yAngRate (deg/s)",
              "zAngRate (deg/s)", "xAccel (m/s^2)", "yAccel (m/s^2)",
              "zAccel (m/s^2)"],
             [],
             []],
    # new in ublox 8
    # @todo numSens
    0x1010: ["esf_status",16,
             "U4U1"+"U1"*7+"U1"+"U1"*2+"U1",
             4,"X1X1U1X1",
             [1,1]+[1]*7+[1]+[1]*2+[1],
             ["iTOW (ms)", "version"]+["reserved1"]*7+["fusionMode"]+ \
             ["reserved2"]*2+["numSens"],
             [1,1,1,1],
             ["sensStatus1", "sensStatus2", "freq (Hz)", "faults"]],
    # new in ublox 8
    0x2111: ["log_batch",100,
             "U1X1U2U4U2U1U1U1U1U1X1U4I4U1X1X1U1I4I4I4I4U4U4I4I4I4I4I4U4U4U2"+\
             "U1"*2+"U4U4U4"+"U1"*4,
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1e-7,1e-7,1,1,1,1,1,1,1,1,1e-5,
              1,1e-5,0.01]+[1]*2+[1,1,1]+[1]*4,
             ["version", "contentValid", "msgCnt", "iTOW (ms)", "year (y)",
              "month (month)", "day (d)", "hour (h)", "min (min)", "sec (s)",
              "valid", "tAcc (ns)", "fracSec (ns)", "fixType", "flags",
              "flags2", "numSV", "lon (deg)", "lat (deg)", "height (mm)",
              "hMSL (mm)", "hAcc (mm)", "vAcc (mm)", "velN (mm/s)",
              "velE (mm/s)", "velD (mm/s)", "gSpeed (mm/s)", "headMot (deg)",
              "sAcc (mm/s)", "headAcc (deg)", "pDOP"]+["reserved1"]*2+ \
             ["distance (m)", "totalDistance (m)", "distanceStd (m)"]+ \
             ["reserved2"]*4,
             [],
             []],
    # new in ublox 8
    0x2800: ["hnr_pvt",72,
             "U4U2U1U1U1U1U1X1I4U1X1"+"U1"*2+"I4I4I4I4I4I4I4I4U4U4U4U4"+"U1"*4,
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1]+[1]*2+[1e-7,1e-7,1,1,1,1,1e-5,1e-5,1,1,1,
            1e-5]+[1]*4,
             ["iTOW (ms)", "year (y)", "month (month)", "day (d)", "hour (h)",
              "min (min)", "sec (s)", "valid", "nano (ns)", "gpsFix",
              "flags"]+ ["reserved1"]*2+["lon (deg)", "lat (deg)",
              "height (mm)", "hMSL (mm)", "gSpeed (mm/s)", "speed (mm/s)",
              "headMot (deg)", "headVeh (deg)", "hAcc (mm)", "vAcc (mm)",
              "sAcc (mm)", "headAcc (deg)"]+["reserved2"]*4,
             [],
             []],
    # new in ublox 8
    0x2802: ["hnr_ins",36,
             "X4"+"U1"*4+"U4I4I4I4I4I4I4",
             0,"",
             [1]+[1]*4+[1,1,1,1,1,1,1],
             ["bitfield0"]+["reserved1"]*4+ \
             ["iTOW (ms)", "xAngRate (deg/s)", "yAngRate (deg/s)",
              "zAngRate (deg/s)", "xAccel (m/s^2)", "yAccel (m/s^2)",
              "zAccel (m/s^2)"],
             [],
             []]
}

ubx_messages_9 = {
    0x0101: ["nav_posecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)",
              "pAcc (cm)"],
             [],
             []],
    0x0102: ["nav_posllh",28,
             "U4I4I4I4I4U4U4",
             0,"",
             [1,1e-7,1e-7,1,1,1,1],
             ["iTOW (ms)", "lon (deg)", "lat (deg)", "height (mm)",
              "hMSL (mm)", "hAcc (mm)", "vAcc (mm)"],
             [],
             []],
    0x0103: ["nav_status",16,
             "U4U1X1X1X1U4U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "gpsFix", "flags", "fixStat", "flags2", "ttff (ms)",
              "msss (ms)"],
             [],
             []],
    0x0104: ["nav_dop",18,
             "U4U2U2U2U2U2U2U2",
             0,"",
             [1,0.01,0.01,0.01,0.01,0.01,0.01,0.01],
             ["iTOW (ms)", "gDOP", "pDOP", "tDOP", "vDOP", "hDOP", "nDOP",
              "eDOP"],
             [],
             []],
    # different from ublox 8
    0x0107: ["nav_pvt",92,
             "U4U2U1U1U1U1U1X1U4I4U1X1X1U1I4I4I4I4U4U4I4I4I4I4I4U4U4U2X1"+ \
             "U1"*5+"I4I2U2",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1e-7,1e-7,1,1,1,1,1,1,1,1,1e-5,1,
              1e-5,0.01,1]+[1]*5+[1e-5,1e-2,1e-2],
             ["iTOW (ms)", "year (y)", "month (month)", "day (d)", "hour (h)",
              "min (min)", "sec (s)", "valid", "tAcc (ns)", "nano (ns)",
              "fixType", "flags", "flags2", "numSV", "lon (deg)", "lat (deg)",
              "height (mm)", "hMSL (mm)", "hAcc (mm)", "vAcc (mm)",
              "velN (mm/s)", "velE (mm/s)", "velD (mm/s)", "gSpeed (mm/s)",
              "headMot (deg)", "sAcc (mm/s)", "headAcc (deg)", "pDOP",
              "flags3"]+["reserved1"]*5+ \
             ["headVeh (deg)", "magDec (deg)", "magAcc (deg)"],
             [],
             []],
    0x0109: ["nav_odo",20,
             "U1"+"U1"*3+"U4U4U4U4",
             0,"",
             [1]+[1]*3+[1,1,1,1],
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "distance (m)", "totalDistance (m)",
              "distanceStd (m)"],
             [],
             []],
    0x0111: ["nav_velecef",20,
             "U4I4I4I4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "ecefVX (cm/s)", "ecefVY (cm/s)", "ecefVZ (cm/s)",
              "sAcc (cm/s)"],
             [],
             []],
    0x0112: ["nav_velned",36,
             "U4I4I4I4U4U4I4U4U4",
             0,"",
             [1,1,1,1,1,1,1e-5,1,1e-5],
             ["iTOW (ms)", "velN (cm/s)", "velE (cm/s)", "velD (cm/s)",
              "speed (cm/s)", "gSpeed (cm/s)", "heading (deg)", "sAcc (cm/s)",
              "cAcc (deg)"],
             [],
             []],
    # different from ublox 8
    0x0113: ["nav_hpposecef",28,
             "U1"+"U1"*3+"U4I4I4I4I1I1I1X1U4",
             0,"",
             [1]+[1]*3+[1,1,1,1,0.1,0.1,0.1,1,0.1],
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "ecefX (cm)", "ecefY (cm)", "ecefZ (cm)",
              "ecefXHp (mm)", "ecefYHp (mm)", "ecefZHp (mm)", "flags",
              "pAcc (mm)"],
             [],
             []],
    # different from ublox 8
    0x0114: ["nav_hpposllh",36,
             "U1"+"U1"*2+"X1U4I4I4I4I4I1I1I1I1U4U4",
             0,"",
             [1],[1]*2+[1,1,1e-7,1e-7,1,1,1e-9,1e-9,0.1,0.1,0.1,0.1],
             ["version"]+["reserved1"]*2+ \
             ["flags", "iTOW (ms)", "log (deg)", "lat (deg)", "height (mm)",
              "hMSL (mm)", "lonHp (deg)", "latHp (deg)", "heightHp (mm)",
              "heightHp (mm)", "hAcc (mm)", "vAcc (mm)"],
             [],
             []],
    0x0120: ["nav_timegps",16,
             "U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1],
             ["iTOW (ms)", "fTOW (ns)", "week", "leapS (s)", "valid",
              "tAcc (ns)"],
             [],
             []],
    0x0121: ["nav_timeutc",20,
             "U4U4I4U2U1U1U1U1U1X1",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["iTOW (ms)", "tAcc (ns)", "nano (ns)", "year (y)",
              "month (month)", "day (d)", "hour (h)", "min (min)", "sec (s)",
              "valid"],
             [],
             []],
    0x0122: ["nav_clock",20,
             "U4I4I4U4U4",
             0,"",
             [1,1,1,1,1],
             ["iTOW (ms)", "clkB (ns)", "clkD (ns/s)", "tAcc (ns)",
              "fAcc (ps/s)"],
             [],
             []],
    0x0123: ["nav_timeglo",20,
             "U4U4I4U2U1X1U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "TOD (s)", "fTOD (ns)", "Nt (days)", "N4", "valid",
              "tAcc (ns)"],
             [],
             []],
    0x0124: ["nav_timebds",20,
             "U4U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "SOW (s)", "fSOW (ns)", "week", "leapS (s)",
              "valid", "tAcc (ns)"],
             [],
             []],
    0x0125: ["nav_timegal",20,
             "U4U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "galTow (s)", "fGalTow (ns)", "galWno", "leapS (s)",
              "valid", "tAcc (ns)"],
             [],
             []],
    0x0126: ["nav_timels",24,
             "U4U1"+"U1"*3+"U1I1U1I1I4U2U2"+"U1"*3+"X1",
             0,"",
             [1,1]+[1]*3+[1,1,1,1,1,1,1]+[1]*3+[1],
             ["iTOW (ms)", "version"]+["reserved1"]*3+ \
             ["srcOfCurrLs", "currLs (s)", "srcOfLsChange", "lsChange (s)",
              "timeToLsEvent (s)", "dateOfLsGpsWn", "dateOfLsGpsDn"]+ \
             ["reserved2"]*3+["valid"],
             [],
             []],
    0x0127: ["nav_timeqzss",20,
             "U4U4I4I2I1X1U4",
             0,"",
             [1,1,1,1,1,1,1],
             ["iTOW (ms)", "qzssTow (s)", "fQzssTow (ns)", "qzssWno", "leapS (s)",
              "valid", "tAcc (ns)"],
             [],
             []],
    0x0132: ["nav_sbas",12,
             "U4U1U1I1X1U1X1"+"U1"*2,
             12,"U1U1U1U1U1U1I2"+"U1"*2+"I2",
             [1,1,1,1,1,1,1]+[1]*2,
             ["iTOW (ms)", "geo", "mode", "sys", "service", "cnt", "statusFlags"]+["reserved0"]*2,
             [1,1,1,1,1,1,1]+[1]*2,
             ["svid", "reserved1", "udre", "svSys", "svService", "reserved2", "prc"]+["reserved3"]*2+["ic"]],
    # @todo svid + gnssid
    0x0134: ["nav_orb",8,
             "U4U1U1"+"U1"*2,
             6,"U1U1X1X1X1X1",
             [1,1,1]+[1]*2,
             ["iTOW (ms)", "version", "numSv"]+["reserved1"]*2,
             [1,1,1,1,1,1],
             ["gnssId", "svId", "svFlag", "eph", "alm", "otherOrb"]],
    # @todo svid + gnssid
    0x0135: ["nav_sat",8,
             "U4U1U1"+"U1"*2,
             12,"U1U1U1I1I2I2X4",
             [1,1,1]+[1]*2,
             ["iTOW (ms)", "version", "numSvs"]+["reserved1"]*2,
             [1,1,1,1,1,0.1,1],
             ["gnssId", "svId", "cno (dBHz)", "elev (deg)", "azim (deg)",
              "prRes (m)", "flags"]],
    0x0136: ["nav_cov",64,
             "U4U1U1U1"+"U1"*9+"R4R4R4R4R4R4R4R4R4R4R4R4",
             0,"",
             [1,1,1,1]+[1]*9+[1,1,1,1,1,1,1,1,1,1,1,1],
             ["iTOW (ms)", "version", "posCovValid", "velCovValid"] +["reserved0"]*9+["posCovNN", "posCovNE", "posCovND","posCovEE", "posCovED", "posCovDD",
                                                                                      "velCovNN", "velCovNE", "velCovND","velCovEE", "velCovED", "velCovDD"],
             [],
             []],
    # @todo numFences
    0x0139: ["nav_geofence",8,
             "U4U1U1U1U1",
             2,"U1U1",
             [1,1,1,1,1],
             ["iTOW (ms)", "version", "status", "numFences", "combState"],
             [1]+[1],
             ["state"]+["id"]],
    0x013B: ["nav_svin",40,
             "U1"+"U1"*3+"U4U4I4I4I4I1I1I1U1U4U4U1U1"+"U1"*2,
             0,"",
             [1]+[1]*3+[1,1,1,1,1,1,1,1,1,1,1,1,1]+[1]*2,
             ["version"]+["reserved1"]*3+ \
             ["iTOW (ms)", "dur (s)", "meanX (cm)", "meanY (cm)", "meanZ (cm)",
              "meanXHP (0.1_mm)", "meanYHP (0.1_mm)", "meanZHP (0.1_mm)",
              "reserved2", "meanAcc (0.1_mm)", "obs", "valid", "active"]+ \
             ["reserved3"]*2,
             [],
             []],
    # different from ublox 8
    0x013C: ["nav_relposned",64,
             "U1U1U2U4I4I4I4I4I4"+"U1"*4+"I1I1I1I1U4U4U4U4U4"+"U1"*4+"X4",
             0,"",
             [1,1,1,1,1,1,1,1,1e-5]+[1]*4+[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,
              1e-5]+[1]*4+[1],
             ["version", "reserved1", "refStationId", "iTOW (ms)",
              "relPosN (cm)", "relPosE (cm)", "relPosD (cm)",
              "relPosLength (cm)", "relPosHeading (deg)"]+["reserved2"]*4+ \
             ["relPosHPN (mm)", "relPosHPE (mm)", "relPosHPD (mm)",
              "relPosHPLength (mm)", "accN (mm)", "accE (mm)", "accD (mm)",
              "accLength (mm)", "accHeading (deg)"]+["reserved3"]*4+["flags"],
             [],
             []],
    # new in ublox 9
    # @todo svid + gnssid + sigId
    0x0143: ["nav_sig",8,
             "U4U1U1"+"U1"*2,
             16,"U1U1U1U1I2U1U1U1U1X2"+"U1"*4,
             [1,1,1]+[1]*2,
             ["iTOW (ms)", "version", "numSigs"]+["reserved1"]*2,
             [1,1,1,1,0.1,1,1,1,1,1]+[1]*4,
             ["gnssId", "svId", "sigId", "freqId", "prRes (m)", "cno (dBHz)",
              "qualityInd", "corrSource", "ionoModel", "sigFlags"]+ \
             ["reserved2"]*4],
    0x0161: ["nav_eoe",4,
             "U4",
             0,"",
             [1],
             ["iTOW (ms)"],
             [],
             []],
    # @todo svid + gnssid
    0x0214: ["rxm_measx",44,
             "U1"+"U1"*3+"U4U4U4"+"U1"*4+"U4U2U2U2"+"U1"*2+"U2U1U1"+"U1"*8,
             24,"U1U1U1U1I4I4U2U2U4U1U1"+"U1"*2,
             [1]+[1]*3+[1,1,1]+[1]*4,[1,2e-4,2e-4,2e-4]+[1]*2+[2e-4,1,1]+[1]*8,
             ["version"]+["reserved1"]*3+ \
             ["gpsTOW (ms)", "gloTOW (ms)", "bdsTOW (ms)"]+["reserved2"]*4+ \
             ["qzssTOW (ms)", "gpsTOWacc (ms)", "gloTOWacc (ms)",
              "bdsTOWacc (ms)"]+["reserved3"]*2+ \
             ["qzssTOWacc", "numSV", "flags"]+["reserved4"]*8,
             [1,1,1,1,0.04,0.2,1,1,2e-21,1,1]+[1]*2,
             ["gnssId", "svId", "cNo", "mpathIndic", "dopplerMS (m/s)",
              "dopplerHz (Hz)", "wholeChips", "fracChips", "codePhase (ms)",
              "intCodePhase (ms)", "pseuRangeRMSErr"]+["reserved5"]*2],
    # @todo svid + gnssid + sigId
    # @todo nの扱い
    0x0215: ["rxm_rawx",16,
             "R8U2I1U1X1U1"+"U1"*2,
             32,"R8R8R4U1U1U1U1U2U1X1X1X1X1U1",
             [1,1,1,1,1]+[1]*3,
             ["rcvTow (ms)", "week (weeks)", "leapS (s)", "numMeas",
              "recStat"]+ ["reserved1"]*3,
             # [1,1,1,1,1,1,1,1,1,0.01*2**n,0.004,0.002*2**n,1,1],
             [1,1,1,1,1,1,1,1,1,1,0.004,1,1,1],
             #["prMes (m)", "cpMes (cycles)", "doMes (Hz)", "gnssId", "svId",
             # "reserved2", "freqId", "locktime (ms)", "cno (dBHz)",
             # "prStdev (m)", "cpStdev (cycles)", "doStdev (Hz)", "trkStat",
             # "reserved3"]],
             ["prMes (m)", "cpMes (cycles)", "doMes (Hz)", "gnssId", "svId",
              "reserved2", "freqId", "locktime (ms)", "cno (dBHz)",
              "prStdev (unscaled)", "cpStdev (cycles)", "doStdev (unscaled)", "trkStat",
              "reserved3"]],
    # new in ublox 9
    # @todo 長さ計算可
    0x068B: ["cfg_valget",4,
             "U1U1U2",
             1,"U1",
             [1,1,1],
             ["version", "layer", "position"],
             [1],
             ["cfgData"]],
    # @todo 20の倍数
    0x0A02: ["mon_io",0,
             "",
             20,"U4U4U2U2U2U2"+"U1"*4,
             [],
             [],
             [1,1,1,1,1,1]+[1]*4,
             ["rxBytes (bytes)", "txBytes (bytes)", "parityErrs",
              "framingErrs", "overrunErrs", "breakCond"]+["reserved1"]*4],
    # @todo 長さ計算可
    0x0A04: ["mon_ver",40,
             "CH"*30+"CH"*10,
             30,"CH"*30,
             [1]*30+[1]*10,
             ["swVersion"]*30+["hwVersion"]*10,
             [1]*30,
             ["extension"]*30],
    0x0A06: ["mon_msgpp",120,
             "U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U2"*8+"U4"*6,
             0,"",
             [1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*8+[1]*6,
             ["msg1 (msgs)"]*8+["msg2 (msgs)"]*8+["msg3 (msgs)"]*8+ \
             ["msg4 (msgs)"]*8+["msg5 (msgs)"]*8+["msg6 (msgs)"]*8+ \
             ["skipped (bytes)"]*6,
             [],
             []],
    0x0A07: ["mon_rxbuf",24,
             "U2"*6+"U1"*6+"U1"*6,
             0,"",
             [1]*6+[1]*6+[1]*6,
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6,
             [],
             []],
    0x0A08: ["mon_txbuf",28,
             "U2"*6+"U1"*6+"U1"*6+"U1U1X1U1",
             0,"",
             [1]*6+[1]*6+[1]*6+[1,1,1,1],
             ["pending (bytes)"]*6+["usage (%)"]*6+["peakUsage (%)"]*6+ \
             ["tUsage (%)", "tPeakusage (%)", "errors", "reserved1"],
             [],
             []],
    0x0A09: ["mon_hw",60,
             "X4X4X4X4U2U2U1U1X1U1X4"+"U1"*17+"U1"+"U1"*2+"X4X4X4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1,1]+[1]*17+[1]+[1]*2+[1,1,1],
             ["pinSel", "pinBank", "pinDir", "pinVal", "noisePerMS", "agcCnt",
              "aStatus", "aPower", "flags", "reserved1", "usedMask"]+ \
             ["VP"]*17+["jamInd"]+["reserved2"]*2+["pinIrq", "pullH", "pullL"],
             [],
             []],
    0x0A0B: ["mon_hw2",28,
             "I1U1I1U1U1"+"U1"*3+"U4"+"U1"*8+"U4"+"U1"*4,
             0,"",
             [1,1,1,1,1]+[1]*3+[1]+[1]*8+[1]+[1]*4,
             ["ofsI", "magI", "ofsQ", "magQ", "cfgSource"]+["reserved1"]*3+ \
             ["lowLevCfg"]+["reserved2"]*8+["postStatus"]+["reserved3"]*4,
             [],
             []],
    # @todo nEntries
    0x0A27: ["mon_patch",4,
             "U2U2",
             16,"X4U4U4U4",
             [1,1],
             ["version", "nEntries"],
             [1,1,1,1],
             ["patchInfo", "comparatorNumber", "patchAddress", "patchData"]],
    # new in ublox 9
    0x0A28: ["mon_gnss",8,
             "U1X1X1X1U1"+"U1"*3,
             0,"",
             [1,1,1,1,1]+[1]*3,
             ["version", "supported", "defaultGnss", "enabled",
              "simultaneous"]+["reserved1"]*3,
             [],
             []],
    0x0A31: ["mon_span",4,
             "U1U1"+"U1"*2,
             272,"U1"*256+"U4U4U4U1"+"U1"*3,
             [1,1]+[1]*2,
             ["version", "numRfBlocks"]+["reserved0"]*2,
             [1]*256+[1,1,1,1]+[1]*3,
             ["spectrum"]*256+["span", "res", "center", "pga"]+["reserved"]*3],
    # new in ublox 9
    # @todo portId
    0x0A36: ["mon_comms",8,
             "U1U1X1"+"U1"*1+"U1"*4,
             40,"U2U2U4U1U1U2U4U1U1U2"+"U2"*4+"U1"*8+"U4",
             [1,1,1]+[1]*1+[1]*4,
             ["version", "nPorts", "txErrors"]+["reserved1"]*1+["protIds"]*4,
             [1,1,1,1,1,1,1,1,1,1]+[1]*4+[1]*8+[1],
             ["portId", "txPending (bytes)", "txBytes (bytes)", "txUsage (%)",
              "txPeakUsage (%)", "rxPending (bytes)", "rxBytes (bytes)",
              "rxUsage (%)", "rxPeakUsage (%)", "overrunErrs"]+ \
             ["msgs (msg)"]*4+["reserved2"]*8+["skipped (bytes)"]],
    # new in ublox 9
    # @todo nPins (pinId)
    0x0A37: ["mon_hw3",22,
             "U1U1X1"+"CH"*10+"U1"*9,
             6,"U2X2U1U1",
             [1,1,1]+[1]*10+[1]*9,
             ["version", "nPins", "flags"]+["hwVersion"]*10+["reserved1"]*9,
             [1,1,1,1],
             ["pinId", "pinMask", "VP", "reserved2"]],
    # new in ublox 9
    # @todo nBlocks (blockId)
    0x0A38: ["mon_rf",4,
             "U1U1"+"U1"*2,
             24,"U1X1U1U1U4"+"U1"*4+"U2U2U1I1U1I1U1"+"U1"*3,
             [1,1]+[1]*2,
             ["version", "nBlocks"]+["reserved1"]*2,
             [1,1,1,1,1]+[1]*4+[1,1,1,1,1,1,1]+[1]*3,
             ["blockId", "flags", "antStatus", "antPower", "postStatus"]+ \
             ["reserved2"]*4+["noisePerMS", "agcCnt", "jamInd", "ofsI", "magI",
              "ofsQ", "magQ"]+["reserved3"]*3],
    0x0D01: ["tim_tp",16,
             "U4U4I4U2X1X1",
             0,"",
             [1,2**-32,1,1,1,1],
             ["towMS (ms)", "towSubMS (ms)", "qErr (ps)", "week (weeks)",
              "flags", "refInfo"],
             [],
             []],
    0x0D03: ["tim_tm2",28,
             "U1X1U2U2U2U4U4U4U4U4",
             0,"",
             [1,1,1,1,1,1,1,1,1,1],
             ["ch", "flags", "count", "wnR", "wnF", "towMsR (ms)",
              "towSubMsR (ns)", "towMsF (ms)", "towSubMsF (ns)",
              "accEst (ns)"],
             [],
             []],
    0x0D06: ["tim_vrfy",20,
             "I4I4I4I4U2X1U1",
             0,"",
             [1,1,1,1,1,1,1],
             ["itow (ms)", "frac (ns)", "deltaMs (ms)", "deltaNs (ns)",
              "wno (week)", "flags", "reserved1"],
             [],
             []]
}

class ublox():
    def __init__(self, message_description):
        self.payload = []
        self.message_class_id = message_description[0]
        self.payload_length_fix = message_description[1]
        self.payload_format_fix = message_description[2]
        self.payload_length_var = message_description[3]
        self.payload_format_var = message_description[4]
        self.scalings_fix = message_description[5]
        self.csv_header_fix = message_description[6]
        self.scalings_var = message_description[7]
        self.csv_header_var = message_description[8]

    def _conv(self, format_string: str) -> str:
        _RE = re.compile(r'CH|R8|R4|U4|I4|X4|U2|I2|X2|U1|I1|X1')
        _MAP = {
            "U1":"B", "I1":"b", "X1":"B",
            "U2":"H", "I2":"h", "X2":"H",
            "U4":"I", "I4":"i", "X4":"I",
            "R4":"f", "R8":"d",
            "CH":"c"
        }
        return _RE.sub(lambda m: _MAP[m.group(0)], format_string)
    def unpack(self, dat):
        payload_format = self._conv(self.payload_format_fix)
        scalings = np.asarray(self.scalings_fix, dtype=float)
        if self.payload_length_var != 0:
            dat_size = len(dat)
            payload_number_var = int((dat_size-self.payload_length_fix)/self.payload_length_var)
            payload_format_var = self._conv(self.payload_format_var) * payload_number_var
            payload_format += payload_format_var
            scalings = np.concatenate((scalings, self.scalings_var * payload_number_var))
        raw_data = struct.unpack("<" + payload_format, dat)
        raw_data = np.array(raw_data)
        if (scalings == np.ones(len(scalings))).all():
            scaled_data = raw_data
        else:
            scaled_data = raw_data * scalings
        return scaled_data
    def append(self, dat):
        py_data = self.unpack(dat)
        self.payload.append(py_data)
    def save_csv(self, filename):
        if len(self.payload) > 0:
            df = pd.DataFrame(self.payload)
            df_columns_len = len(df.columns)
            header = self.csv_header_fix.copy()
            if self.payload_length_var != 0:
                headers_number_var = int((df_columns_len - len(self.csv_header_fix)) / len(self.csv_header_var))
                header += self.csv_header_var * headers_number_var
            header[0] = "# " + header[0]
            df.columns=header
            df.to_csv(filename, index=False)

def checksum(dat):
    ck_a = 0
    ck_b = 0
    for dat_ele in dat:
        ck_a = (ck_a + dat_ele) & 0xFF
        ck_b = (ck_b + ck_a) & 0xFF
    return ck_a + ck_b * 256
